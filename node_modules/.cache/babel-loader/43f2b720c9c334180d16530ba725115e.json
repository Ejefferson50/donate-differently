{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { ConsoleLogger as Logger, filenameToContentType, isTextFile, sortByField } from '@aws-amplify/core';\nimport { Storage } from '@aws-amplify/storage';\nimport { Picker } from '../Widget/Picker';\nimport AmplifyTheme from '../AmplifyTheme';\nimport { S3Image } from './S3Image';\nimport { S3Text } from './S3Text';\nvar logger = new Logger('Storage.S3Album');\n\nvar S3Album =\n/** @class */\nfunction (_super) {\n  __extends(S3Album, _super);\n\n  function S3Album(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._isMounted = false;\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.list = _this.list.bind(_this);\n    _this.marshal = _this.marshal.bind(_this);\n    _this.state = {\n      items: [],\n      ts: new Date().getTime()\n    };\n    return _this;\n  }\n\n  S3Album.prototype.getKey = function (file) {\n    var fileToKey = this.props.fileToKey;\n    var name = file.name,\n        size = file.size,\n        type = file.type;\n    var key = encodeURI(name);\n\n    if (fileToKey) {\n      var callback_type = typeof fileToKey;\n\n      if (callback_type === 'string') {\n        key = fileToKey;\n      } else if (callback_type === 'function') {\n        key = fileToKey({\n          name: name,\n          size: size,\n          type: type\n        });\n      } else {\n        key = encodeURI(JSON.stringify(fileToKey));\n      }\n\n      if (!key) {\n        logger.debug('key is empty');\n        key = 'empty_key';\n      }\n    }\n\n    return key.replace(/\\s/g, '_');\n  };\n\n  S3Album.prototype.handlePick = function (data) {\n    var _this = this;\n\n    var _a = this.props,\n        onPick = _a.onPick,\n        onLoad = _a.onLoad,\n        onError = _a.onError,\n        track = _a.track,\n        level = _a.level;\n\n    if (onPick) {\n      onPick(data);\n    }\n\n    var path = this.props.path || '';\n    var file = data.file,\n        name = data.name,\n        size = data.size,\n        type = data.type;\n    var key = path + this.getKey(data);\n\n    if (!Storage || typeof Storage.put !== 'function') {\n      throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n    }\n\n    Storage.put(key, file, {\n      level: level ? level : 'public',\n      contentType: type,\n      track: track\n    }).then(function (data) {\n      logger.debug('handle pick data', data);\n      var items = _this.state.items;\n\n      if (items.filter(function (item) {\n        return item.key === key;\n      }).length === 0) {\n        var list = items.concat(data);\n\n        _this.marshal(list);\n      } else {\n        logger.debug('update an item');\n      }\n\n      if (onLoad) {\n        onLoad(data);\n      }\n    }).catch(function (err) {\n      logger.debug('handle pick error', err);\n\n      if (onError) {\n        onError(err);\n      }\n    });\n\n    if (this._isMounted) {\n      this.setState({\n        ts: new Date().getTime()\n      });\n    }\n  };\n\n  S3Album.prototype.handleClick = function (item) {\n    var _a = this.props,\n        onClickItem = _a.onClickItem,\n        select = _a.select,\n        onSelect = _a.onSelect;\n\n    if (onClickItem) {\n      onClickItem(item);\n    }\n\n    if (!select) {\n      return;\n    }\n\n    item.selected = !item.selected;\n\n    if (this._isMounted) {\n      this.setState({\n        items: this.state.items.slice()\n      });\n    }\n\n    if (!onSelect) {\n      return;\n    }\n\n    var selected_items = this.state.items.filter(function (item) {\n      return item.selected;\n    });\n    onSelect(item, selected_items);\n  };\n\n  S3Album.prototype.componentDidMount = function () {\n    this._isMounted = true;\n    this.list();\n  };\n\n  S3Album.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n  };\n\n  S3Album.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this.props.path === prevProps.path && this.props.ts === prevProps.ts && this.props.select === prevProps.select) {\n      return;\n    }\n\n    if (!this.props.select) {\n      this.state.items.forEach(function (item) {\n        return item.selected = false;\n      });\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(null, []);\n    }\n\n    this.list();\n  };\n\n  S3Album.prototype.list = function () {\n    var _this = this;\n\n    var _a = this.props,\n        path = _a.path,\n        level = _a.level,\n        track = _a.track,\n        identityId = _a.identityId;\n    logger.debug('Album path: ' + path);\n\n    if (!Storage || typeof Storage.list !== 'function') {\n      throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n    }\n\n    return Storage.list(path, {\n      level: level ? level : 'public',\n      track: track,\n      identityId: identityId\n    }).then(function (data) {\n      logger.debug('album list', data);\n\n      _this.marshal(data);\n    }).catch(function (err) {\n      logger.warn(err);\n      return [];\n    });\n  };\n\n  S3Album.prototype.contentType = function (item) {\n    return filenameToContentType(item.key, 'image/*');\n  };\n\n  S3Album.prototype.marshal = function (list) {\n    var _this = this;\n\n    var contentType = this.props.contentType || '';\n    list.forEach(function (item) {\n      if (item.contentType) {\n        return;\n      }\n\n      var isString = typeof contentType === 'string';\n      item.contentType = isString ? contentType : contentType(item);\n\n      if (!item.contentType) {\n        item.contentType = _this.contentType(item);\n      }\n    });\n    var items = this.filter(list);\n    items = this.sort(items);\n\n    if (this._isMounted) {\n      this.setState({\n        items: items\n      });\n    }\n  };\n\n  S3Album.prototype.filter = function (list) {\n    var filter = this.props.filter;\n    return filter ? filter(list) : list;\n  };\n\n  S3Album.prototype.sort = function (list) {\n    var sort = this.props.sort;\n    var typeof_sort = typeof sort;\n\n    if (typeof_sort === 'function') {\n      return sort(list);\n    } // @ts-ignore\n\n\n    if (['string', 'undefined'].includes(typeof_sort)) {\n      var sort_str = sort ? sort : 'lastModified';\n      var parts = sort_str.split(/\\s+/);\n      var field = parts[0];\n      var dir = parts.length > 1 ? parts[1] : '';\n\n      if (field === 'lastModified') {\n        dir = dir === 'asc' ? 'asc' : 'desc';\n      } else {\n        dir = dir === 'desc' ? 'desc' : 'asc';\n      }\n\n      sortByField(list, field, dir);\n      return list;\n    }\n\n    logger.warn('invalid sort. done nothing. should be a string or function');\n    return list;\n  };\n\n  S3Album.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        picker = _a.picker,\n        translateItem = _a.translateItem,\n        level = _a.level,\n        identityId = _a.identityId;\n    var _b = this.state,\n        items = _b.items,\n        ts = _b.ts;\n    var pickerTitle = this.props.pickerTitle || 'Pick';\n    var theme = this.props.theme || AmplifyTheme;\n    var list = items.map(function (item) {\n      var isText = item.contentType && isTextFile(item.contentType);\n      return isText ? React.createElement(S3Text, {\n        key: item.key,\n        textKey: item.key,\n        theme: theme,\n        style: theme.albumText,\n        selected: item.selected,\n        translate: translateItem,\n        level: level,\n        identityId: identityId,\n        onClick: function () {\n          return _this.handleClick(item);\n        }\n      }) : React.createElement(S3Image, {\n        key: item.key,\n        imgKey: item.key,\n        theme: theme,\n        style: theme.albumPhoto,\n        selected: item.selected,\n        translate: translateItem,\n        level: level,\n        identityId: identityId,\n        onClick: function () {\n          return _this.handleClick(item);\n        }\n      });\n    });\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      style: theme.album\n    }, list), picker ? React.createElement(Picker, {\n      key: ts,\n      title: pickerTitle,\n      accept: \"image/*, text/*\",\n      onPick: this.handlePick,\n      theme: theme\n    }) : null);\n  };\n\n  return S3Album;\n}(React.Component);\n\nexport { S3Album };\n/**\r\n * @deprecated use named import\r\n */\n\nexport default S3Album;","map":{"version":3,"sources":["../../src/Storage/S3Album.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as React from 'react';\r\nimport { ConsoleLogger as Logger, filenameToContentType, isTextFile, sortByField, } from '@aws-amplify/core';\r\nimport { Storage } from '@aws-amplify/storage';\r\nimport { Picker } from '../Widget/Picker';\r\nimport AmplifyTheme from '../AmplifyTheme';\r\nimport { S3Image } from './S3Image';\r\nimport { S3Text } from './S3Text';\r\nvar logger = new Logger('Storage.S3Album');\r\nvar S3Album = /** @class */ (function (_super) {\r\n    __extends(S3Album, _super);\r\n    function S3Album(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._isMounted = false;\r\n        _this.handlePick = _this.handlePick.bind(_this);\r\n        _this.handleClick = _this.handleClick.bind(_this);\r\n        _this.list = _this.list.bind(_this);\r\n        _this.marshal = _this.marshal.bind(_this);\r\n        _this.state = {\r\n            items: [],\r\n            ts: new Date().getTime(),\r\n        };\r\n        return _this;\r\n    }\r\n    S3Album.prototype.getKey = function (file) {\r\n        var fileToKey = this.props.fileToKey;\r\n        var name = file.name, size = file.size, type = file.type;\r\n        var key = encodeURI(name);\r\n        if (fileToKey) {\r\n            var callback_type = typeof fileToKey;\r\n            if (callback_type === 'string') {\r\n                key = fileToKey;\r\n            }\r\n            else if (callback_type === 'function') {\r\n                key = fileToKey({ name: name, size: size, type: type });\r\n            }\r\n            else {\r\n                key = encodeURI(JSON.stringify(fileToKey));\r\n            }\r\n            if (!key) {\r\n                logger.debug('key is empty');\r\n                key = 'empty_key';\r\n            }\r\n        }\r\n        return key.replace(/\\s/g, '_');\r\n    };\r\n    S3Album.prototype.handlePick = function (data) {\r\n        var _this = this;\r\n        var _a = this.props, onPick = _a.onPick, onLoad = _a.onLoad, onError = _a.onError, track = _a.track, level = _a.level;\r\n        if (onPick) {\r\n            onPick(data);\r\n        }\r\n        var path = this.props.path || '';\r\n        var file = data.file, name = data.name, size = data.size, type = data.type;\r\n        var key = path + this.getKey(data);\r\n        if (!Storage || typeof Storage.put !== 'function') {\r\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\r\n        }\r\n        Storage.put(key, file, {\r\n            level: level ? level : 'public',\r\n            contentType: type,\r\n            track: track,\r\n        })\r\n            .then(function (data) {\r\n            logger.debug('handle pick data', data);\r\n            var items = _this.state.items;\r\n            if (items.filter(function (item) { return item.key === key; }).length === 0) {\r\n                var list = items.concat(data);\r\n                _this.marshal(list);\r\n            }\r\n            else {\r\n                logger.debug('update an item');\r\n            }\r\n            if (onLoad) {\r\n                onLoad(data);\r\n            }\r\n        })\r\n            .catch(function (err) {\r\n            logger.debug('handle pick error', err);\r\n            if (onError) {\r\n                onError(err);\r\n            }\r\n        });\r\n        if (this._isMounted) {\r\n            this.setState({ ts: new Date().getTime() });\r\n        }\r\n    };\r\n    S3Album.prototype.handleClick = function (item) {\r\n        var _a = this.props, onClickItem = _a.onClickItem, select = _a.select, onSelect = _a.onSelect;\r\n        if (onClickItem) {\r\n            onClickItem(item);\r\n        }\r\n        if (!select) {\r\n            return;\r\n        }\r\n        item.selected = !item.selected;\r\n        if (this._isMounted) {\r\n            this.setState({ items: this.state.items.slice() });\r\n        }\r\n        if (!onSelect) {\r\n            return;\r\n        }\r\n        var selected_items = this.state.items.filter(function (item) { return item.selected; });\r\n        onSelect(item, selected_items);\r\n    };\r\n    S3Album.prototype.componentDidMount = function () {\r\n        this._isMounted = true;\r\n        this.list();\r\n    };\r\n    S3Album.prototype.componentWillUnmount = function () {\r\n        this._isMounted = false;\r\n    };\r\n    S3Album.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (this.props.path === prevProps.path &&\r\n            this.props.ts === prevProps.ts &&\r\n            this.props.select === prevProps.select) {\r\n            return;\r\n        }\r\n        if (!this.props.select) {\r\n            this.state.items.forEach(function (item) { return (item.selected = false); });\r\n        }\r\n        if (this.props.onSelect) {\r\n            this.props.onSelect(null, []);\r\n        }\r\n        this.list();\r\n    };\r\n    S3Album.prototype.list = function () {\r\n        var _this = this;\r\n        var _a = this.props, path = _a.path, level = _a.level, track = _a.track, identityId = _a.identityId;\r\n        logger.debug('Album path: ' + path);\r\n        if (!Storage || typeof Storage.list !== 'function') {\r\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\r\n        }\r\n        return Storage.list(path, {\r\n            level: level ? level : 'public',\r\n            track: track,\r\n            identityId: identityId,\r\n        })\r\n            .then(function (data) {\r\n            logger.debug('album list', data);\r\n            _this.marshal(data);\r\n        })\r\n            .catch(function (err) {\r\n            logger.warn(err);\r\n            return [];\r\n        });\r\n    };\r\n    S3Album.prototype.contentType = function (item) {\r\n        return filenameToContentType(item.key, 'image/*');\r\n    };\r\n    S3Album.prototype.marshal = function (list) {\r\n        var _this = this;\r\n        var contentType = this.props.contentType || '';\r\n        list.forEach(function (item) {\r\n            if (item.contentType) {\r\n                return;\r\n            }\r\n            var isString = typeof contentType === 'string';\r\n            item.contentType = isString ? contentType : contentType(item);\r\n            if (!item.contentType) {\r\n                item.contentType = _this.contentType(item);\r\n            }\r\n        });\r\n        var items = this.filter(list);\r\n        items = this.sort(items);\r\n        if (this._isMounted) {\r\n            this.setState({ items: items });\r\n        }\r\n    };\r\n    S3Album.prototype.filter = function (list) {\r\n        var filter = this.props.filter;\r\n        return filter ? filter(list) : list;\r\n    };\r\n    S3Album.prototype.sort = function (list) {\r\n        var sort = this.props.sort;\r\n        var typeof_sort = typeof sort;\r\n        if (typeof_sort === 'function') {\r\n            return sort(list);\r\n        }\r\n        // @ts-ignore\r\n        if (['string', 'undefined'].includes(typeof_sort)) {\r\n            var sort_str = sort ? sort : 'lastModified';\r\n            var parts = sort_str.split(/\\s+/);\r\n            var field = parts[0];\r\n            var dir = parts.length > 1 ? parts[1] : '';\r\n            if (field === 'lastModified') {\r\n                dir = dir === 'asc' ? 'asc' : 'desc';\r\n            }\r\n            else {\r\n                dir = dir === 'desc' ? 'desc' : 'asc';\r\n            }\r\n            sortByField(list, field, dir);\r\n            return list;\r\n        }\r\n        logger.warn('invalid sort. done nothing. should be a string or function');\r\n        return list;\r\n    };\r\n    S3Album.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, picker = _a.picker, translateItem = _a.translateItem, level = _a.level, identityId = _a.identityId;\r\n        var _b = this.state, items = _b.items, ts = _b.ts;\r\n        var pickerTitle = this.props.pickerTitle || 'Pick';\r\n        var theme = this.props.theme || AmplifyTheme;\r\n        var list = items.map(function (item) {\r\n            var isText = item.contentType && isTextFile(item.contentType);\r\n            return isText ? (React.createElement(S3Text, { key: item.key, textKey: item.key, theme: theme, style: theme.albumText, selected: item.selected, translate: translateItem, level: level, identityId: identityId, onClick: function () { return _this.handleClick(item); } })) : (React.createElement(S3Image, { key: item.key, imgKey: item.key, theme: theme, style: theme.albumPhoto, selected: item.selected, translate: translateItem, level: level, identityId: identityId, onClick: function () { return _this.handleClick(item); } }));\r\n        });\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { style: theme.album }, list),\r\n            picker ? (React.createElement(Picker, { key: ts, title: pickerTitle, accept: \"image/*, text/*\", onPick: this.handlePick, theme: theme })) : null));\r\n    };\r\n    return S3Album;\r\n}(React.Component));\r\nexport { S3Album };\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default S3Album;\r\n//# sourceMappingURL=S3Album.js.map"]},"metadata":{},"sourceType":"module"}